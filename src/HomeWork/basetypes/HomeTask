Задача 2. Класс DoubleHashTable
Реализовать класс DoubleHashTable - хэш таблица с двойным хэшированием

В качестве размера таблицы выбирать простое число, первоначальное значение 101

При количестве коллизий более 10% при одной серии пробирований - перестраивать таблицу, увеличивая размер

Стратегия роста - удвоение размера, но с учетом правила - размер таблицы простое число. Т.е. искать ближайшее ,большее простое

Ключи должны реализовывать интерфейс
interface HashValue {
int getHash();

}

Таким образом, мы унифицируем ключи любого типа, приведя их к целочисленному.

Реализовать 2 класса ключей:
- IntKey - алгоритм хэширования может быть любой, можно вернуть просто само число.
- StringKey - выбрать что-то, из функций, представленных в лекции,

Само двойное хэширование реализуем уже после получения целочисленного значения через getHash().
В самой хэш-таблице должно быть 2 функции хэширования: деление и умножение

Методы

2.1 public void add(K key, V value) - добавить пару ключ-значение

2.2 public V get(K key) - получить значение по ключу

2.3 public void remove(K key) - удалить элемент по ключу

2.4 public void change(K key1, Key key2) - изменить значение ключа у элемента с key1 на key2

2.5 public int size() - получить количество элементов

2.6 реализовать интерфейс Iterable<T>