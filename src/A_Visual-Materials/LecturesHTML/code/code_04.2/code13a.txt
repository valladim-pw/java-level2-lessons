import java.util.LinkedList;

public class CHashTable<T> {
	class CHashItem<T> {
		private T item;
		private int key;
		private CHashItem<T> next;
		
		CHashItem(int key, T item) {
			this.key = key;
			this.item = item;
		}
		
		int getKey() {
			return key;
		}
		
		T getItem() {
			return item;
		}
		
		void setNext(CHashItem<T> item) {
			next = item;
		}
		
		CHashItem<T> getNext() {
			return next;
		}
		
		@Override
		public String toString() {
			return "{key: " + key + ", value: " + item + "}";
		}
	}
	
	class CHashItemList<T> extends LinkedList<T> {
		public int index;
		
		CHashItemList() {
			super();
		}
		
		CHashItemList(int index) {
			this();
			this.index = index;
		}
		
		int getIndex() {
			return index;
		}
		
		@Override
		public String toString() {
			LinkedList<T> list = new LinkedList<>(this);
			return "basket " + index + ": " + list;
		}
	}
	CHashItem<T>[] table;
	LinkedList<CHashItem<T>> copyList;
	int capacity;

	CHashTable(int n) {
		this.capacity = n;
		table = new CHashItem[n];
		copyList = new LinkedList<>();
	}
	
	public int getHash(int key) {
		return key % table.length;
	}
	
	void add(int key, T item) {
		int index = getHash(key);
		CHashItem<T> li = new CHashItem<>(key, item);
		CHashItem<T> head = table[index];
		table[index] = li;
		 
		if(head != null)
			li.setNext(head);
		copyList.add(li);
	}
	
	T get(int key) {
		int index = getHash(key);
		CHashItem<T> current = table[index];
		do {
			if(current.key == key) {
				return  current.getItem();
			}
			current = current.getNext();
		} while(current != null);
		return null;
	}
	
	public void displayTable() {
		CHashItemList<CHashItem<T>>[] pTable = new CHashItemList[capacity];
		for (int i = 0; i < pTable.length; i++) {
			pTable[i] = new CHashItemList<>(i);
			pTable[i].add(null);
		}
		
		CHashItem<T> item = null;
		int index = 0;
		
		for (int i = 0; i < copyList.size(); i++) {
			item = copyList.get(i);
			index = getHash(item.getKey());
			for (int j = 0; j < pTable.length; j++) {
				if (pTable[j].getIndex() == index) {
					if (pTable[j].get(0) == null)
						pTable[j].set(0, item);
					else
						pTable[j].add(0, item);
				}
			}
		}
		System.out.println("CHashTable(" + capacity + ")------------");
		for (CHashItemList<CHashItem<T>> value : pTable) {
			System.out.println(value);
		}
	}
	public static void main(String[] args) {
		CHashTable<String> table = new CHashTable<>(5);
		for(int i = 0; i < 20; i++) {
			table.add(i, "i=" + i);
		}
		table.displayTable();
		CHashTable<String> table2 = new CHashTable<>(7);
		for(int i = 0; i < 20; i++) {
			table2.add(i, "i=" + i);
		}
		table2.displayTable();
	}
}